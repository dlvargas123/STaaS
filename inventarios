#!/bin/bash

# Carpeta de destino
target_directory="/root/inventario_dlvargas"

# Crear la carpeta de destino
mkdir -p "$target_directory"

# Verificar si la carpeta se creó correctamente
if [ -d "$target_directory" ]; then
    echo "La carpeta $target_directory se ha creado correctamente."
else
    echo "Error: No se pudo crear la carpeta $target_directory."
    exit 1
fi

# Crear el archivo inventario.py con el contenido especificado
cat << 'EOF' > "$target_directory/inventario.py"
import os
import csv
import traceback
from datetime import datetime, timedelta

# Directorio de entrada
input_directory = "/mnt/POOL-STORAGE/"

# Directorio de salida
output_directory = "/root/inventario_dlvargas/"

# Archivo de log para errores
log_file = os.path.join(output_directory, "error.log")

# Función para obtener la extensión de un archivo
def get_extension(filename):
    _, extension = os.path.splitext(filename)
    return extension[1:] if extension else ""

# Función para eliminar archivos de inventario antiguos
def clean_old_inventories(directory, days=7):
    try:
        # Obtener la fecha límite
        limit_date = datetime.now() - timedelta(days=days)
        for filename in os.listdir(directory):
            filepath = os.path.join(directory, filename)
            if os.path.isfile(filepath) and filename.endswith("_inventario.csv"):
                # Obtener la fecha del archivo a partir del nombre
                try:
                    file_date_str = filename.split("_")[0]
                    file_date = datetime.strptime(file_date_str, "%Y-%m-%d")
                    if file_date < limit_date:
                        os.remove(filepath)
                except ValueError:
                    continue
    except Exception as e:
        with open(log_file, 'a') as log:
            log.write(f"Error limpiando inventarios antiguos: {e}\n")
            log.write(traceback.format_exc())
            log.write("\n")

try:
    # Limpiar inventarios antiguos
    clean_old_inventories(output_directory)

    # Obtener la fecha actual y formatearla como YYYY-MM-DD
    current_date = datetime.now().strftime("%Y-%m-%d")

    # Archivo de salida basado en la fecha actual
    output_file = os.path.join(output_directory, f"{current_date}_inventario.csv")

    # Crear y escribir el archivo CSV
    with open(output_file, mode='w', newline='') as file:
        writer = csv.writer(file)
        writer.writerow(["Length", "Name", "Extension", "FullName"])

        # Recorrer todos los archivos y directorios en input_directory
        for root, dirs, files in os.walk(input_directory):
            for name in dirs + files:
                fullname = os.path.join(root, name)
                if os.path.isfile(fullname):
                    length = os.path.getsize(fullname)
                else:
                    length = 0
                extension = get_extension(name)
                writer.writerow([length, name, extension, fullname])
except Exception as e:
    with open(log_file, 'a') as log:
        log.write(f"Error: {e}\n")
        log.write(traceback.format_exc())
        log.write("\n")
EOF

# Dar permisos de ejecución al archivo inventario.py
chmod +x "$target_directory/inventario.py"

# Verificar si el archivo inventario.py se creó correctamente
if [ -f "$target_directory/inventario.py" ]; then
    echo "El archivo $target_directory/inventario.py se ha creado correctamente."
else
    echo "Error: No se pudo crear el archivo $target_directory/inventario.py."
    exit 1
fi
